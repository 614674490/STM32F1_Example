##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32               15/May/2008  12:06:31 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  thumb                                                #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM        #
#                       Encoder\example\FWLib\src\stm32f10x_lib.c            #
#    Command line    =  "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       #
#                       Encoder\example\FWLib\src\stm32f10x_lib.c" -D        #
#                       VECT_TAB_FLASH -lcN "C:\David JIANG\ST               #
#                       MCU\Docs\STM32\AN_JIANG\TIM                          #
#                       Encoder\example\project\EWARM\BOOT_FLASH\List\" -lb  #
#                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       #
#                       Encoder\example\project\EWARM\BOOT_FLASH\List\" -o   #
#                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       #
#                       Encoder\example\project\EWARM\BOOT_FLASH\Obj\" -z3   #
#                       --no_cse --no_unroll --no_inline --no_code_motion    #
#                       --no_tbaa --no_clustering --no_scheduling --debug    #
#                       --cpu_mode thumb --endian little --cpu cortex-M3     #
#                       --stack_align 4 --require_prototypes --fpu None      #
#                       --dlib_config "C:\Program Files\IAR                  #
#                       Systems\Embedded Workbench                           #
#                       4.0\arm\LIB\dl7mptnnl8f.h" -I "C:\David JIANG\ST     #
#                       MCU\Docs\STM32\AN_JIANG\TIM                          #
#                       Encoder\example\project\EWARM\" -I "C:\David         #
#                       JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM                 #
#                       Encoder\example\project\EWARM\..\include\" -I        #
#                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       #
#                       Encoder\example\project\EWARM\..\..\FWLib\inc\" -I   #
#                       "C:\Program Files\IAR Systems\Embedded Workbench     #
#                       4.0\arm\INC\"                                        #
#    List file       =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM        #
#                       Encoder\example\project\EWARM\BOOT_FLASH\List\stm32f #
#                       10x_lib.lst                                          #
#    Object file     =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM        #
#                       Encoder\example\project\EWARM\BOOT_FLASH\Obj\stm32f1 #
#                       0x_lib.r79                                           #
#                                                                            #
#                                                                            #
##############################################################################

C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM Encoder\example\FWLib\src\stm32f10x_lib.c
      1          /******************** (C) COPYRIGHT 2007 STMicroelectronics ********************
      2          * File Name          : stm32f10x_lib.c
      3          * Author             : MCD Application Team
      4          * Date First Issued  : 09/29/2006
      5          * Description        : This file provides all peripherals pointers initialization.
      6          ********************************************************************************
      7          * History:
      8          * 05/21/2007: V0.3
      9          * 04/02/2007: V0.2
     10          * 02/05/2007: V0.1
     11          * 09/29/2006: V0.01
     12          ********************************************************************************
     13          * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     15          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     16          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     17          * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     18          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19          *******************************************************************************/
     20          
     21          #define EXT
     22          
     23          /* Includes ------------------------------------------------------------------*/
     24          #include "stm32f10x_lib.h"
     25          
     26          /* Private typedef -----------------------------------------------------------*/
     27          /* Private define ------------------------------------------------------------*/
     28          /* Private macro -------------------------------------------------------------*/
     29          /* Private variables ---------------------------------------------------------*/
     30          /* Private function prototypes -----------------------------------------------*/
     31          /* Private functions ---------------------------------------------------------*/
     32          
     33          #ifdef DEBUG
     34          /*******************************************************************************
     35          * Function Name  : debug
     36          * Description    : This function initialize peripherals pointers.
     37          * Input          : None
     38          * Output         : None
     39          * Return         : None
     40          *******************************************************************************/
     41          void debug(void)
     42          {
     43          
     44          /************************************* ADC ************************************/
     45          #ifdef _ADC1
     46            ADC1 = (ADC_TypeDef *)  ADC1_BASE;
     47          #endif /*_ADC1 */
     48          
     49          #ifdef _ADC2
     50            ADC2 = (ADC_TypeDef *)  ADC2_BASE;
     51          #endif /*_ADC2 */
     52          
     53          /************************************* BKP ************************************/
     54          #ifdef _BKP
     55            BKP = (BKP_TypeDef *)  BKP_BASE;
     56          #endif /*_BKP */
     57          
     58          /************************************* CAN ************************************/
     59          #ifdef _CAN
     60            CAN = (CAN_TypeDef *)  CAN_BASE;
     61          #endif /*_CAN */
     62          
     63          /************************************* DMA ************************************/
     64          #ifdef _DMA
     65            DMA = (DMA_TypeDef *)  DMA_BASE;
     66          #endif /*_DMA */
     67          
     68          #ifdef _DMA_Channel1
     69            DMA_Channel1 = (DMA_Channel_TypeDef *)  DMA_Channel1_BASE;
     70          #endif /*_DMA_Channel1 */
     71          
     72          #ifdef _DMA_Channel2
     73            DMA_Channel2 = (DMA_Channel_TypeDef *)  DMA_Channel2_BASE;
     74          #endif /*_DMA_Channel2 */
     75          
     76          #ifdef _DMA_Channel3
     77            DMA_Channel3 = (DMA_Channel_TypeDef *)  DMA_Channel3_BASE;
     78          #endif /*_DMA_Channel3 */
     79          
     80          #ifdef _DMA_Channel4
     81            DMA_Channel4 = (DMA_Channel_TypeDef *)  DMA_Channel4_BASE;
     82          #endif /*_DMA_Channel4 */
     83          
     84          #ifdef _DMA_Channel5
     85            DMA_Channel5 = (DMA_Channel_TypeDef *)  DMA_Channel5_BASE;
     86          #endif /*_DMA_Channel5 */
     87          
     88          #ifdef _DMA_Channel6
     89            DMA_Channel6 = (DMA_Channel_TypeDef *)  DMA_Channel6_BASE;
     90          #endif /*_DMA_Channel6 */
     91          
     92          #ifdef _DMA_Channel7
     93            DMA_Channel7 = (DMA_Channel_TypeDef *)  DMA_Channel7_BASE;
     94          #endif /*_DMA_Channel7 */
     95          
     96          /************************************* EXTI ***********************************/
     97          #ifdef _EXTI
     98            EXTI = (EXTI_TypeDef *)  EXTI_BASE;
     99          #endif /*_EXTI */
    100          
    101          /************************************* FLASH and Option Bytes *****************/
    102          #ifdef _FLASH
    103            FLASH = (FLASH_TypeDef *)  FLASH_BASE;
    104            OB = (OB_TypeDef *)  OB_BASE;
    105          #endif /*_FLASH */
    106          
    107          /************************************* GPIO ***********************************/
    108          #ifdef _GPIOA
    109            GPIOA = (GPIO_TypeDef *)  GPIOA_BASE;
    110          #endif /*_GPIOA */
    111          
    112          #ifdef _GPIOB
    113            GPIOB = (GPIO_TypeDef *)  GPIOB_BASE;
    114          #endif /*_GPIOB */
    115          
    116          #ifdef _GPIOC
    117            GPIOC = (GPIO_TypeDef *)  GPIOC_BASE;
    118          #endif /*_GPIOC */
    119          
    120          #ifdef _GPIOD
    121            GPIOD = (GPIO_TypeDef *)  GPIOD_BASE;
    122          #endif /*_GPIOD */
    123          
    124          #ifdef _GPIOE
    125            GPIOE = (GPIO_TypeDef *)  GPIOE_BASE;
    126          #endif /*_GPIOE */
    127          
    128          #ifdef _AFIO
    129            AFIO = (AFIO_TypeDef *)  AFIO_BASE;
    130          #endif /*_AFIO */
    131          
    132          /************************************* I2C ************************************/
    133          #ifdef _I2C1
    134            I2C1 = (I2C_TypeDef *)  I2C1_BASE;
    135          #endif /*_I2C1 */
    136          
    137          #ifdef _I2C2
    138            I2C2 = (I2C_TypeDef *)  I2C2_BASE;
    139          #endif /*_I2C2 */
    140          
    141          /************************************* IWDG ***********************************/
    142          #ifdef _IWDG
    143            IWDG = (IWDG_TypeDef *) IWDG_BASE;
    144          #endif /*_IWDG */
    145          
    146          /************************************* NVIC ***********************************/
    147          #ifdef _NVIC
    148            NVIC = (NVIC_TypeDef *)  NVIC_BASE;
    149            SCB = (SCB_TypeDef *)  SCB_BASE;
    150          #endif /*_NVIC */
    151          
    152          /************************************* PWR ************************************/
    153          #ifdef _PWR
    154            PWR = (PWR_TypeDef *)  PWR_BASE;
    155          #endif /*_PWR */
    156          
    157          /************************************* RCC ************************************/
    158          #ifdef _RCC
    159            RCC = (RCC_TypeDef *)  RCC_BASE;
    160          #endif /*_RCC */
    161          
    162          /************************************* RTC ************************************/
    163          #ifdef _RTC
    164            RTC = (RTC_TypeDef *)  RTC_BASE;
    165          #endif /*_RTC */
    166          
    167          /************************************* SPI ************************************/
    168          #ifdef _SPI1
    169            SPI1 = (SPI_TypeDef *)  SPI1_BASE;
    170          #endif /*_SPI1 */
    171          
    172          #ifdef _SPI2
    173            SPI2 = (SPI_TypeDef *)  SPI2_BASE;
    174          #endif /*_SPI2 */
    175          
    176          /************************************* SysTick ********************************/
    177          #ifdef _SysTick
    178            SysTick = (SysTick_TypeDef *)  SysTick_BASE;
    179          #endif /*_SysTick */
    180          
    181          /************************************* TIM1 ***********************************/
    182          #ifdef _TIM1
    183            TIM1 = (TIM1_TypeDef *)  TIM1_BASE;
    184          #endif /*_TIM1 */
    185          
    186          /************************************* TIM ************************************/
    187          #ifdef _TIM2
    188            TIM2 = (TIM_TypeDef *)  TIM2_BASE;
    189          #endif /*_TIM2 */
    190          
    191          #ifdef _TIM3
    192            TIM3 = (TIM_TypeDef *)  TIM3_BASE;
    193          #endif /*_TIM3 */
    194          
    195          #ifdef _TIM4
    196            TIM4 = (TIM_TypeDef *)  TIM4_BASE;
    197          #endif /*_TIM4 */
    198          
    199          /************************************* USART **********************************/
    200          #ifdef _USART1
    201            USART1 = (USART_TypeDef *) USART1_BASE;
    202          #endif /*_USART1 */
    203          
    204          #ifdef _USART2
    205            USART2 = (USART_TypeDef *) USART2_BASE;
    206          #endif /*_USART2 */
    207          
    208          #ifdef _USART3
    209            USART3 = (USART_TypeDef *) USART3_BASE;
    210          #endif /*_USART3 */
    211          
    212          /************************************* WWDG ***********************************/
    213          #ifdef _WWDG
    214            WWDG = (WWDG_TypeDef *)  WWDG_BASE;
    215          #endif /*_WWDG */
    216          }
    217          #endif  /* DEBUG*/
    218          
    219          /******************* (C) COPYRIGHT 2007 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

     Function CSTACK
     -------- ------
     debug        0


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     TIM2              4
     TIM3              4
     TIM4              4
     RTC               4
     WWDG              4
     IWDG              4
     SPI2              4
     USART2            4
     USART3            4
     I2C1              4
     I2C2              4
     CAN               4
     BKP               4
     PWR               4
     AFIO              4
     EXTI              4
     GPIOA             4
     GPIOB             4
     GPIOC             4
     GPIOD             4
     GPIOE             4
     ADC1              4
     ADC2              4
     TIM1              4
     SPI1              4
     USART1            4
     DMA               4
     DMA_Channel1      4
     DMA_Channel2      4
     DMA_Channel3      4
     DMA_Channel4      4
     DMA_Channel5      4
     DMA_Channel6      4
     DMA_Channel7      4
     FLASH             4
     OB                4
     RCC               4
     SysTick           4
     NVIC              4
     SCB               4
     debug           560
      Others          12

 
 560 bytes in segment CODE
 160 bytes in segment DATA_Z
  12 bytes in segment INITTAB
 
 560 bytes of CODE memory (+ 12 bytes shared)
 160 bytes of DATA memory

Errors: none
Warnings: none
